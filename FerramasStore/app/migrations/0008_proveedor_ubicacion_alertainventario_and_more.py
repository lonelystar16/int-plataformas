# Generated by Django 5.2.3 on 2025-07-05 01:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0007_alter_pago_comprador'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('rut', models.CharField(help_text='RUT del proveedor (ej: 12345678-9)', max_length=12, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=15)),
                ('direccion', models.TextField()),
                ('contacto_principal', models.CharField(help_text='Nombre del contacto principal', max_length=100)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('condicion_pago', models.CharField(default='30 días', help_text='Condición de pago acordada', max_length=50)),
                ('descuento_proveedor', models.DecimalField(decimal_places=2, default=0.0, help_text='Descuento por volumen', max_digits=5)),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único (ej: BOD-A1-001)', max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('bodega', 'Bodega Principal'), ('salon', 'Salón de Ventas'), ('deposito', 'Depósito'), ('transito', 'En Tránsito')], max_length=20)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ubicación',
                'verbose_name_plural': 'Ubicaciones',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='AlertaInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('stock_bajo', 'Stock Bajo'), ('stock_critico', 'Stock Crítico'), ('sobre_stock', 'Sobre Stock'), ('producto_vencido', 'Producto Vencido'), ('producto_por_vencer', 'Producto Por Vencer')], max_length=20)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('resuelto', 'Resuelto'), ('ignorado', 'Ignorado')], default='pendiente', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True)),
                ('stock_actual', models.PositiveIntegerField()),
                ('stock_minimo', models.PositiveIntegerField(blank=True, null=True)),
                ('stock_maximo', models.PositiveIntegerField(blank=True, null=True)),
                ('mensaje', models.TextField(help_text='Mensaje de la alerta')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('asignado_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertas_asignadas', to=settings.AUTH_USER_MODEL)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas', to='app.producto')),
                ('resuelto_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertas_resueltas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerta de Inventario',
                'verbose_name_plural': 'Alertas de Inventario',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_minimo', models.PositiveIntegerField(default=10, help_text='Nivel mínimo de stock')),
                ('stock_maximo', models.PositiveIntegerField(default=100, help_text='Nivel máximo de stock')),
                ('punto_reorden', models.PositiveIntegerField(default=20, help_text='Punto de reorden automático')),
                ('alertas_activas', models.BooleanField(default=True)),
                ('dias_aviso_vencimiento', models.PositiveIntegerField(default=30, help_text='Días de aviso antes del vencimiento')),
                ('es_critico', models.BooleanField(default=False, help_text='Producto crítico para el negocio')),
                ('rotacion_abc', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], default='C', help_text='Clasificación ABC', max_length=1)),
                ('producto', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracion_inventario', to='app.producto')),
            ],
            options={
                'verbose_name': 'Configuración de Inventario',
                'verbose_name_plural': 'Configuraciones de Inventario',
            },
        ),
        migrations.CreateModel(
            name='LoteInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_lote', models.CharField(max_length=50, unique=True)),
                ('cantidad_inicial', models.PositiveIntegerField()),
                ('cantidad_actual', models.PositiveIntegerField()),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True)),
                ('fecha_vencimiento', models.DateField(blank=True, help_text='Fecha de vencimiento si aplica', null=True)),
                ('costo_unitario', models.DecimalField(decimal_places=2, help_text='Costo unitario de compra', max_digits=10)),
                ('costo_total', models.DecimalField(decimal_places=2, help_text='Costo total del lote', max_digits=10)),
                ('activo', models.BooleanField(default=True)),
                ('reservado', models.PositiveIntegerField(default=0, help_text='Cantidad reservada para ventas')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='app.producto')),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='app.proveedor')),
                ('ubicacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='app.ubicacion')),
            ],
            options={
                'verbose_name': 'Lote de Inventario',
                'verbose_name_plural': 'Lotes de Inventario',
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.CreateModel(
            name='MovimientoInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('salida', 'Salida'), ('transferencia', 'Transferencia'), ('ajuste', 'Ajuste'), ('reserva', 'Reserva'), ('liberacion', 'Liberación de Reserva')], max_length=20)),
                ('motivo', models.CharField(choices=[('compra', 'Compra a Proveedor'), ('venta', 'Venta a Cliente'), ('devolucion', 'Devolución'), ('merma', 'Merma/Pérdida'), ('robo', 'Robo/Faltante'), ('transferencia', 'Transferencia entre Ubicaciones'), ('ajuste_inventario', 'Ajuste de Inventario'), ('reserva_venta', 'Reserva para Venta'), ('liberacion_reserva', 'Liberación de Reserva')], max_length=30)),
                ('cantidad', models.PositiveIntegerField()),
                ('stock_anterior', models.PositiveIntegerField(help_text='Stock antes del movimiento')),
                ('stock_nuevo', models.PositiveIntegerField(help_text='Stock después del movimiento')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('documento_referencia', models.CharField(blank=True, help_text='Número de factura, orden, etc.', max_length=100, null=True)),
                ('lote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='app.loteinventario')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='app.producto')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos_inventario', to=settings.AUTH_USER_MODEL)),
                ('ubicacion_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movimientos_entrada', to='app.ubicacion')),
                ('ubicacion_origen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movimientos_salida', to='app.ubicacion')),
            ],
            options={
                'verbose_name': 'Movimiento de Inventario',
                'verbose_name_plural': 'Movimientos de Inventario',
                'ordering': ['-fecha'],
            },
        ),
    ]
